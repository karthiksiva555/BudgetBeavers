// <auto-generated />
using System;
using BudgetBeavers.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BudgetBeavers.Persistence.Migrations
{
    [DbContext(typeof(BudgetBeaversDbContext))]
    [Migration("20250726172859_AddHomeUserEntity")]
    partial class AddHomeUserEntity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BudgetBeavers.Core.Entities.Home", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Homes");
                });

            modelBuilder.Entity("BudgetBeavers.Core.Entities.HomeUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("HomeId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("HomeId");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("HomeUsers");
                });

            modelBuilder.Entity("BudgetBeavers.Core.Entities.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e0a3e06a-5e88-4f57-9481-35ab6c71205a"),
                            CreatedAt = new DateTime(2025, 5, 10, 12, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Admin"
                        },
                        new
                        {
                            Id = new Guid("f4b1c4a9-0f93-4d0a-a7b7-cd3cbe58f937"),
                            CreatedAt = new DateTime(2025, 5, 10, 12, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Viewer"
                        });
                });

            modelBuilder.Entity("BudgetBeavers.Core.Entities.Transaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("HomeId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("TransactionCategoryId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("HomeId");

                    b.HasIndex("TransactionCategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("BudgetBeavers.Core.Entities.TransactionCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TransactionCategories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7e2b1c3a-4f6d-4e2a-9b1a-2c3d4e5f6a7b"),
                            CreatedAt = new DateTime(2025, 5, 10, 12, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Groceries"
                        },
                        new
                        {
                            Id = new Guid("1a2b3c4d-5e6f-7a8b-9c0d-1e2f3a4b5c6d"),
                            CreatedAt = new DateTime(2025, 5, 10, 12, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Entertainment"
                        },
                        new
                        {
                            Id = new Guid("b2c1d3e4-5f6a-7b8c-9d0e-1f2a3b4c5d6e"),
                            CreatedAt = new DateTime(2025, 5, 10, 12, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Food"
                        },
                        new
                        {
                            Id = new Guid("c3d4e5f6-a7b8-c9d0-e1f2-a3b4c5d6e7f8"),
                            CreatedAt = new DateTime(2025, 5, 10, 12, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Mortgage / Rent"
                        },
                        new
                        {
                            Id = new Guid("d4e5f6a7-b8c9-d0e1-f2a3-b4c5d6e7f8a9"),
                            CreatedAt = new DateTime(2025, 5, 10, 12, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Insurance"
                        },
                        new
                        {
                            Id = new Guid("f7a8b9c0-d1e2-f3a4-b5c6-d7e8f9a0b1c2"),
                            CreatedAt = new DateTime(2025, 5, 10, 12, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Utilities"
                        },
                        new
                        {
                            Id = new Guid("b3c4d5e6-f7a8-b9c0-d1e2-f3a4b5c6d7e8"),
                            CreatedAt = new DateTime(2025, 5, 10, 12, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Bill Payments"
                        },
                        new
                        {
                            Id = new Guid("a1b2c3d4-e5f6-a7b8-c9d0-e1f2a3b4c5d6"),
                            CreatedAt = new DateTime(2025, 5, 10, 12, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Loan Payments"
                        },
                        new
                        {
                            Id = new Guid("e5f6a7b8-c9d0-e1f2-a3b4-c5d6e7f8a9b0"),
                            CreatedAt = new DateTime(2025, 5, 10, 12, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Unplanned Expense"
                        },
                        new
                        {
                            Id = new Guid("f2a3b4c5-d6e7-f8a9-b0c1-d2e3f4a5b6c7"),
                            CreatedAt = new DateTime(2025, 5, 10, 12, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Transportation"
                        },
                        new
                        {
                            Id = new Guid("e1f2a3b4-c5d6-e7f8-a9b0-c1d2e3f4a5b6"),
                            CreatedAt = new DateTime(2025, 5, 10, 12, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Welness"
                        },
                        new
                        {
                            Id = new Guid("d8e9f0a1-b2c3-d4e5-f6a7-b8c9d0e1f2a3"),
                            CreatedAt = new DateTime(2025, 5, 10, 12, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Shopping"
                        },
                        new
                        {
                            Id = new Guid("c5d6e7f8-a9b0-c1d2-e3f4-a5b6c7d8e9f0"),
                            CreatedAt = new DateTime(2025, 5, 10, 12, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Maintenance"
                        });
                });

            modelBuilder.Entity("BudgetBeavers.Core.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BudgetBeavers.Core.Entities.HomeUser", b =>
                {
                    b.HasOne("BudgetBeavers.Core.Entities.Home", "Home")
                        .WithMany("HomeUsers")
                        .HasForeignKey("HomeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BudgetBeavers.Core.Entities.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BudgetBeavers.Core.Entities.User", "User")
                        .WithMany("HomeUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Home");

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BudgetBeavers.Core.Entities.Transaction", b =>
                {
                    b.HasOne("BudgetBeavers.Core.Entities.Home", "Home")
                        .WithMany()
                        .HasForeignKey("HomeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BudgetBeavers.Core.Entities.TransactionCategory", "TransactionCategory")
                        .WithMany()
                        .HasForeignKey("TransactionCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BudgetBeavers.Core.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Home");

                    b.Navigation("TransactionCategory");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BudgetBeavers.Core.Entities.Home", b =>
                {
                    b.Navigation("HomeUsers");
                });

            modelBuilder.Entity("BudgetBeavers.Core.Entities.User", b =>
                {
                    b.Navigation("HomeUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
